Standard API

{root.api}/{version}/{grouping}/{endpoint}
SAMPLE
https://mern-api.eliavina.tech/v1/auth/login

Standard Status Response

200 - OK --> Success
201 - Created --> Success
400 - Bad Request --> Error
401 - Unauthorized --> Error
404 - Not Found --> Error
403 - Forbidden --> Error
500 - Internal Server Error --> Error
502 - Bad Gateway --> Error
503 - Service Unavailable --> Error

============================================================================================================

GROUP: Authentication

[1] - Register
{root.api}/{version}/auth/register
req: {
    "name" : "John Doe",
    "email" : "johndoe@example.com",
    "password" : "password"
}

res: {
    "success": true,
    "message": "User registered successfully",
    "data": {
    "id": "1",
    "name": "John Doe",
    "email": "jhondoe@example.com",
}

err-response:
400 -> Input invalid
{
    "success": false,
    "message": "Invalid input",
    "data": {
        "email": "Email is required",
        "password": "Password is required"
    }
}

[2] - Login
{root.api}/{version}/auth/login

req: {
    "email" : "johndoe@example.com",
    "password" : "password"
}

res: {
    "success": true,
    "message": "User logged in successfully",
    "data": {
        "id": "1",
        "name": "John Doe",
        "email": "johndoe@example.com",
    }
}

err-response:
400 -> Input invalid
{
    "success": false,
    "message": "Invalid input",
    "data": {
        "email": "Email is required",
        "password": "Password is required"
    }
}

============================================================================================================

GROUP: BLOG
[1] - Get All Blogs
{root.api}/{version}/blog
req: {}
res: {
    "success": true,
    "message": "Blogs fetched successfully",
    "data": [
        {
            "id": "1",
            "title": "Blog Title",
            "content": "Blog Content",
            "author": "John Doe",
            "created_at": "2021-01-01 00:00:00",
            "updated_at": "2021-01-01 00:00:00"
        }
    ]
}

401 -> Unauthorized
{
    "success": false,
    "message": "Invalid credentials",
    "data": {}
}

[2] - Get Blog by ID
{root.api}/{version}/blog/{id}
req: {}
res: {
    "success": true,
    "message": "Blog fetched successfully",
    "data": {
        "id": "1",
        "title": "Blog Title",
        "content": "Blog Content",
        "author": "John Doe",
        "created_at": "2021-01-01 00:00:00",
        "updated_at": "2021-01-01 00:00:00"
    }
}

[3] - Create Blog
{root.api}/{version}/blog
req: {
    "title": "Blog Title",
    "image": "Blog Image",
    "content": "Blog Content"
}
res: {
    "success": true,
    "message": "Blog created successfully",
    "data": {
        "id": "1",
        "title": "Blog Title",
        "image": "Blog Image",
        "content": "Blog Content",
        "author": {
            "id": "1",
            "name": "John Doe"
        },
    }
}

err-response:
400 -> Input invalid
{
    "success": false,
    "message": "Invalid input",
    "data": {
        "title": "Title is required",
        "content": "Content is required"
    }
}

201 -> Created
{
    "success": true,
    "message": "Blog created successfully",
    "data": {
        "id": "1",
        "title": "Blog Title",
        "image": "Blog Image",
        "content": "Blog Content",
        "author": {
            "id": "1",
            "name": "John Doe"
        },
    }
}

[4] - Update Blog
{root.api}/{version}/blog/{id}
req: {
    "title": "Blog Title",
    "content": "Blog Content"
}
res: {
    "success": true,
    "message": "Blog updated successfully",
    "data": {
        "id": "1",
        "title": "Blog Title",
        "content": "Blog Content",
        "author": "John Doe",
        "created_at": "2021-01-01 00:00:00",
        "updated_at": "2021-01-01 00:00:00"
    }
}

[5] - Delete Blog
{root.api}/{version}/blog/{id}
req: {}
res: {
    "success": true,
    "message": "Blog deleted successfully",
    "data": {}
}